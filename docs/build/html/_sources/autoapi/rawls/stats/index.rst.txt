:mod:`rawls.stats`
==================

.. py:module:: rawls.stats

.. autoapi-nested-parse::

   RawlsStats class which enables statistics other multiples Rawls instance

   .. attribute:: data

      {ndrray} -- merged buffer data numpy array with higher dimension of all Rawls instance

   .. attribute:: nelements

      {int} -- number Rawls instance used

   .. attribute:: details

      {Details} -- details instance information

   .. attribute:: mean_samples_per_elements

      {float} -- statistic which gives mean number of samples used (if Rawls images do not have same number of samples)

   .. attribute:: expected_shape

      {(int, int, int)} -- describe expected shape of an Rawls image element




---------------


.. py:class:: RawlsStats(rawls_images)

   .. method:: load(self, filepaths)
      :classmethod:


      load data from rawls files

      :param filepath: {[str]} -- list of paths of .rawls files

      :returns: RawlsStats instance
      :rtype: {RawlsStats}


   .. method:: add(self, rawls_img)



   .. method:: mean(self)


      Compute mean on `.rawls` samples

      :returns: {Rawls} -- new rawls object with mean data of rawls files


   .. method:: var(self)


      Compute variance on `.rawls` samples

      :returns: {Rawls} -- new rawls object with variance data of rawls files


   .. method:: std(self)


      Compute std on `.rawls` samples

      :returns: {Rawls} -- new rawls object with std data of rawls files


   .. method:: skew(self)


      Compute skewness on `.rawls` samples

      :returns: {Rawls} -- new rawls object with skewness data of rawls files


   .. method:: kurtosis(self)


      Compute kurtosis on `.rawls` samples

      :returns: {Rawls} -- new rawls object with kurtosis data of rawls files


   .. method:: __str__(self)


      Display RawlsStats information

      :returns: {str} RawlsStats information



